name: Tag Release

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  tag-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    # Only run if PR was merged, title contains "Bump version to", and head branch starts with "version-bump-"
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.title, 'Bump version to') && startsWith(github.event.pull_request.head.ref, 'version-bump-')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Extract version from PR title
        id: extract_version
        run: |
          # Extract version from PR title like "Bump version to 1.2.3"
          VERSION=$(echo "${{ github.event.pull_request.title }}" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          if [ -z "$VERSION" ]; then
            echo "Error: Could not extract version from PR title"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"
      
      - name: Verify VERSION file exists and matches
        run: |
          if [ ! -f VERSION ]; then
            echo "Error: VERSION file not found"
            exit 1
          fi
          
          FILE_VERSION=$(cat VERSION | tr -d '\n\r')
          if [ "$FILE_VERSION" != "${{ steps.extract_version.outputs.version }}" ]; then
            echo "Error: VERSION file contains '$FILE_VERSION' but expected '${{ steps.extract_version.outputs.version }}'"
            exit 1
          fi
          echo "Version file verified: $FILE_VERSION"
      
      - name: Check if tag already exists
        run: |
          if git tag | grep -q "^${{ steps.extract_version.outputs.version }}$"; then
            echo "Error: Tag ${{ steps.extract_version.outputs.version }} already exists"
            exit 1
          fi
      
      - name: Create and push tag
        run: |
          git tag ${{ steps.extract_version.outputs.version }}
          git push origin ${{ steps.extract_version.outputs.version }}
          echo "Created and pushed tag: ${{ steps.extract_version.outputs.version }}"
      
      - name: Verify tag creation
        run: |
          echo "Tag created successfully! This will now trigger the release workflow."
          echo "Release workflow should start building for tag: ${{ steps.extract_version.outputs.version }}"