name: Publish release
on:
  push:
    tags:
      - "*"
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        if [ "$GOOS" = "windows" ]; then
          go build -o dot-${{ matrix.goos }}-${{ matrix.goarch }}.exe ./cmd/dot
        else
          go build -o dot-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/dot
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dot-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dot-${{ matrix.goos }}-${{ matrix.goarch }}*

  publish:
    name: Publish release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate Release Notes
        id: generate_notes
        run: |
          CURRENT_TAG="${{ github.ref_name }}"
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 $CURRENT_TAG^ 2>/dev/null || echo "")
          REPO_URL="https://github.com/${{ github.repository }}"
          if [ -z "$PREVIOUS_TAG" ]; then
            RELEASE_NOTES=$(git log --pretty=format:"- %h %s" $CURRENT_TAG)
          else
            RELEASE_NOTES=$(git log --pretty=format:"- %h %s" $PREVIOUS_TAG..$CURRENT_TAG)
          fi
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release with Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            --notes "${{ steps.generate_notes.outputs.RELEASE_NOTES }}" \
            ./artifacts/*/dot-*